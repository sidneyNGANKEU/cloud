version: "3.8"
services:

  traefik:
    image: "traefik:v3"
    container_name: "traefik"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "./traefik.yaml:/etc/traefik/traefik.yaml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    healthcheck:
      test: 
        - CMD
        - traefik
        - healthcheck
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - roche_network
    restart: unless-stopped

  frontend_app:
    container_name: frontend_app
    networks:
      - roche_network
    image: frontend_app:react
    build: ./frontend
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
    depends_on:
      - backend_api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`demo.local`)"
      - "traefik.http.routers.web.entrypoints=web"

  database:
    container_name: database
    networks:
      - roche_network
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE_FILE: /run/secrets/database
    secrets:
      - db_root_password
      - database
    volumes:
      - mysql_data:/var/lib/mysql

  backend_api:
    container_name: backend_api
    networks:
      - roche_network
    image: backend_api:django
    build: ./backend
    volumes:
      - ./backend:/app
    depends_on:
      - database
    restart: always
    secrets:
      - db_root_password
      - database
      - S3_access_key
      - S3_secret_key
      - storage_bucket_name
      - AWS_region
      - S3_ENDPOINT_URL
    command: >
      sh -c "python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.api.rule=Host(`api.local`)"
    - "traefik.http.routers.api.entrypoints=web"
    - "traefik.http.services.api.loadbalancer.server.port=8000"



secrets:
  db_root_password:
    file: ./db_root_password.txt
  database:
    file: ./database.txt
  S3_access_key:
    file: ./access.txt
  S3_secret_key:
    file: ./secret.txt
  storage_bucket_name:
    file: ./bucketname.txt
  AWS_region:
    file: ./region.txt
  S3_ENDPOINT_URL:
    file: ./endpointurl.txt

volumes:
  mysql_data:

networks:
  roche_network:
